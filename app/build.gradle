apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

project.ext {
    supportLibraryVersion = "27.1.1"
    constraintLayoutVersion = "1.1.0"
    daggerVersion = "2.16"
    retrofitVersion = "2.4.0"
    rxJavaVersion = "2.1.13"
    rxAndroidVersion = "2.0.2"
    lifecycleVersion = "1.1.1"
    okHttpVersion = '3.10.0'
}

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.example.agl.darrenkong.mvvmi"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    implementation "com.android.support.constraint:constraint-layout:$project.constraintLayoutVersion"

    implementation "com.android.support:design:$project.supportLibraryVersion"
    implementation "com.android.support:appcompat-v7:$project.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$project.supportLibraryVersion"

    // Dagger core
    annotationProcessor "com.google.dagger:dagger-compiler:$project.daggerVersion"
    implementation "com.google.dagger:dagger:$project.daggerVersion"

    // Dagger Android
    annotationProcessor "com.google.dagger:dagger-android-processor:$project.daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$project.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$project.daggerVersion"
    // if you are not using support library, include this instead
    implementation "com.google.dagger:dagger-android:$project.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$project.daggerVersion"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$project.retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$project.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$project.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$project.retrofitVersion"

    //OkHttp
    implementation "com.squareup.okhttp3:okhttp:${okHttpVersion}"
    implementation "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}"

    // ReactiveX
    implementation "io.reactivex.rxjava2:rxjava:$project.rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$project.rxAndroidVersion"

    // Lifecycle
    implementation "android.arch.lifecycle:runtime:$project.lifecycleVersion"
    implementation "android.arch.lifecycle:extensions:$project.lifecycleVersion"
    annotationProcessor "android.arch.lifecycle:compiler:$project.lifecycleVersion"

    testCompile 'junit:junit:4.12'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    androidTestCompile('com.android.support.test.espresso:espresso-core:3.0.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude module: 'jsr305'
    })
    androidTestCompile('com.android.support.test:runner:1.0.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    androidTestCompile 'org.mockito:mockito-android:2.7.22'
}
